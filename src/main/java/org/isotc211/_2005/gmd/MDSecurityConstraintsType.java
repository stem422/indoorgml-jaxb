//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.23 at 04:12:02 PM KST 
//


package org.isotc211._2005.gmd;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.isotc211._2005.gco.CharacterStringPropertyType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
 * 
 * <p>Java class for MD_SecurityConstraints_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MD_SecurityConstraints_Type"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.isotc211.org/2005/gmd}MD_Constraints_Type"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="classification" type="{http://www.isotc211.org/2005/gmd}MD_ClassificationCode_PropertyType"/&gt;
 *         &lt;element name="userNote" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="classificationSystem" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="handlingDescription" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MD_SecurityConstraints_Type", propOrder = {
    "classification",
    "userNote",
    "classificationSystem",
    "handlingDescription"
})
public class MDSecurityConstraintsType
    extends MDConstraintsType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected MDClassificationCodePropertyType classification;
    protected CharacterStringPropertyType userNote;
    protected CharacterStringPropertyType classificationSystem;
    protected CharacterStringPropertyType handlingDescription;

    /**
     * Gets the value of the classification property.
     * 
     * @return
     *     possible object is
     *     {@link MDClassificationCodePropertyType }
     *     
     */
    public MDClassificationCodePropertyType getClassification() {
        return classification;
    }

    /**
     * Sets the value of the classification property.
     * 
     * @param value
     *     allowed object is
     *     {@link MDClassificationCodePropertyType }
     *     
     */
    public void setClassification(MDClassificationCodePropertyType value) {
        this.classification = value;
    }

    /**
     * Gets the value of the userNote property.
     * 
     * @return
     *     possible object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public CharacterStringPropertyType getUserNote() {
        return userNote;
    }

    /**
     * Sets the value of the userNote property.
     * 
     * @param value
     *     allowed object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public void setUserNote(CharacterStringPropertyType value) {
        this.userNote = value;
    }

    /**
     * Gets the value of the classificationSystem property.
     * 
     * @return
     *     possible object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public CharacterStringPropertyType getClassificationSystem() {
        return classificationSystem;
    }

    /**
     * Sets the value of the classificationSystem property.
     * 
     * @param value
     *     allowed object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public void setClassificationSystem(CharacterStringPropertyType value) {
        this.classificationSystem = value;
    }

    /**
     * Gets the value of the handlingDescription property.
     * 
     * @return
     *     possible object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public CharacterStringPropertyType getHandlingDescription() {
        return handlingDescription;
    }

    /**
     * Sets the value of the handlingDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public void setHandlingDescription(CharacterStringPropertyType value) {
        this.handlingDescription = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            MDClassificationCodePropertyType theClassification;
            theClassification = this.getClassification();
            strategy.appendField(locator, this, "classification", buffer, theClassification);
        }
        {
            CharacterStringPropertyType theUserNote;
            theUserNote = this.getUserNote();
            strategy.appendField(locator, this, "userNote", buffer, theUserNote);
        }
        {
            CharacterStringPropertyType theClassificationSystem;
            theClassificationSystem = this.getClassificationSystem();
            strategy.appendField(locator, this, "classificationSystem", buffer, theClassificationSystem);
        }
        {
            CharacterStringPropertyType theHandlingDescription;
            theHandlingDescription = this.getHandlingDescription();
            strategy.appendField(locator, this, "handlingDescription", buffer, theHandlingDescription);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MDSecurityConstraintsType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final MDSecurityConstraintsType that = ((MDSecurityConstraintsType) object);
        {
            MDClassificationCodePropertyType lhsClassification;
            lhsClassification = this.getClassification();
            MDClassificationCodePropertyType rhsClassification;
            rhsClassification = that.getClassification();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classification", lhsClassification), LocatorUtils.property(thatLocator, "classification", rhsClassification), lhsClassification, rhsClassification)) {
                return false;
            }
        }
        {
            CharacterStringPropertyType lhsUserNote;
            lhsUserNote = this.getUserNote();
            CharacterStringPropertyType rhsUserNote;
            rhsUserNote = that.getUserNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userNote", lhsUserNote), LocatorUtils.property(thatLocator, "userNote", rhsUserNote), lhsUserNote, rhsUserNote)) {
                return false;
            }
        }
        {
            CharacterStringPropertyType lhsClassificationSystem;
            lhsClassificationSystem = this.getClassificationSystem();
            CharacterStringPropertyType rhsClassificationSystem;
            rhsClassificationSystem = that.getClassificationSystem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classificationSystem", lhsClassificationSystem), LocatorUtils.property(thatLocator, "classificationSystem", rhsClassificationSystem), lhsClassificationSystem, rhsClassificationSystem)) {
                return false;
            }
        }
        {
            CharacterStringPropertyType lhsHandlingDescription;
            lhsHandlingDescription = this.getHandlingDescription();
            CharacterStringPropertyType rhsHandlingDescription;
            rhsHandlingDescription = that.getHandlingDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "handlingDescription", lhsHandlingDescription), LocatorUtils.property(thatLocator, "handlingDescription", rhsHandlingDescription), lhsHandlingDescription, rhsHandlingDescription)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            MDClassificationCodePropertyType theClassification;
            theClassification = this.getClassification();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classification", theClassification), currentHashCode, theClassification);
        }
        {
            CharacterStringPropertyType theUserNote;
            theUserNote = this.getUserNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userNote", theUserNote), currentHashCode, theUserNote);
        }
        {
            CharacterStringPropertyType theClassificationSystem;
            theClassificationSystem = this.getClassificationSystem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classificationSystem", theClassificationSystem), currentHashCode, theClassificationSystem);
        }
        {
            CharacterStringPropertyType theHandlingDescription;
            theHandlingDescription = this.getHandlingDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "handlingDescription", theHandlingDescription), currentHashCode, theHandlingDescription);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof MDSecurityConstraintsType) {
            final MDSecurityConstraintsType copy = ((MDSecurityConstraintsType) draftCopy);
            if (this.classification!= null) {
                MDClassificationCodePropertyType sourceClassification;
                sourceClassification = this.getClassification();
                MDClassificationCodePropertyType copyClassification = ((MDClassificationCodePropertyType) strategy.copy(LocatorUtils.property(locator, "classification", sourceClassification), sourceClassification));
                copy.setClassification(copyClassification);
            } else {
                copy.classification = null;
            }
            if (this.userNote!= null) {
                CharacterStringPropertyType sourceUserNote;
                sourceUserNote = this.getUserNote();
                CharacterStringPropertyType copyUserNote = ((CharacterStringPropertyType) strategy.copy(LocatorUtils.property(locator, "userNote", sourceUserNote), sourceUserNote));
                copy.setUserNote(copyUserNote);
            } else {
                copy.userNote = null;
            }
            if (this.classificationSystem!= null) {
                CharacterStringPropertyType sourceClassificationSystem;
                sourceClassificationSystem = this.getClassificationSystem();
                CharacterStringPropertyType copyClassificationSystem = ((CharacterStringPropertyType) strategy.copy(LocatorUtils.property(locator, "classificationSystem", sourceClassificationSystem), sourceClassificationSystem));
                copy.setClassificationSystem(copyClassificationSystem);
            } else {
                copy.classificationSystem = null;
            }
            if (this.handlingDescription!= null) {
                CharacterStringPropertyType sourceHandlingDescription;
                sourceHandlingDescription = this.getHandlingDescription();
                CharacterStringPropertyType copyHandlingDescription = ((CharacterStringPropertyType) strategy.copy(LocatorUtils.property(locator, "handlingDescription", sourceHandlingDescription), sourceHandlingDescription));
                copy.setHandlingDescription(copyHandlingDescription);
            } else {
                copy.handlingDescription = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new MDSecurityConstraintsType();
    }

}
