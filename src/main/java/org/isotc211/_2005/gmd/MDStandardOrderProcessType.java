//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.23 at 04:12:02 PM KST 
//


package org.isotc211._2005.gmd;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.isotc211._2005.gco.AbstractObjectType;
import org.isotc211._2005.gco.CharacterStringPropertyType;
import org.isotc211._2005.gco.DateTimePropertyType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Common ways in which the dataset may be obtained or received, and related instructions and fee information
 * 
 * <p>Java class for MD_StandardOrderProcess_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MD_StandardOrderProcess_Type"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.isotc211.org/2005/gco}AbstractObject_Type"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="fees" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="plannedAvailableDateTime" type="{http://www.isotc211.org/2005/gco}DateTime_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="orderingInstructions" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="turnaround" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MD_StandardOrderProcess_Type", propOrder = {
    "fees",
    "plannedAvailableDateTime",
    "orderingInstructions",
    "turnaround"
})
public class MDStandardOrderProcessType
    extends AbstractObjectType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected CharacterStringPropertyType fees;
    protected DateTimePropertyType plannedAvailableDateTime;
    protected CharacterStringPropertyType orderingInstructions;
    protected CharacterStringPropertyType turnaround;

    /**
     * Gets the value of the fees property.
     * 
     * @return
     *     possible object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public CharacterStringPropertyType getFees() {
        return fees;
    }

    /**
     * Sets the value of the fees property.
     * 
     * @param value
     *     allowed object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public void setFees(CharacterStringPropertyType value) {
        this.fees = value;
    }

    /**
     * Gets the value of the plannedAvailableDateTime property.
     * 
     * @return
     *     possible object is
     *     {@link DateTimePropertyType }
     *     
     */
    public DateTimePropertyType getPlannedAvailableDateTime() {
        return plannedAvailableDateTime;
    }

    /**
     * Sets the value of the plannedAvailableDateTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateTimePropertyType }
     *     
     */
    public void setPlannedAvailableDateTime(DateTimePropertyType value) {
        this.plannedAvailableDateTime = value;
    }

    /**
     * Gets the value of the orderingInstructions property.
     * 
     * @return
     *     possible object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public CharacterStringPropertyType getOrderingInstructions() {
        return orderingInstructions;
    }

    /**
     * Sets the value of the orderingInstructions property.
     * 
     * @param value
     *     allowed object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public void setOrderingInstructions(CharacterStringPropertyType value) {
        this.orderingInstructions = value;
    }

    /**
     * Gets the value of the turnaround property.
     * 
     * @return
     *     possible object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public CharacterStringPropertyType getTurnaround() {
        return turnaround;
    }

    /**
     * Sets the value of the turnaround property.
     * 
     * @param value
     *     allowed object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public void setTurnaround(CharacterStringPropertyType value) {
        this.turnaround = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            CharacterStringPropertyType theFees;
            theFees = this.getFees();
            strategy.appendField(locator, this, "fees", buffer, theFees);
        }
        {
            DateTimePropertyType thePlannedAvailableDateTime;
            thePlannedAvailableDateTime = this.getPlannedAvailableDateTime();
            strategy.appendField(locator, this, "plannedAvailableDateTime", buffer, thePlannedAvailableDateTime);
        }
        {
            CharacterStringPropertyType theOrderingInstructions;
            theOrderingInstructions = this.getOrderingInstructions();
            strategy.appendField(locator, this, "orderingInstructions", buffer, theOrderingInstructions);
        }
        {
            CharacterStringPropertyType theTurnaround;
            theTurnaround = this.getTurnaround();
            strategy.appendField(locator, this, "turnaround", buffer, theTurnaround);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MDStandardOrderProcessType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final MDStandardOrderProcessType that = ((MDStandardOrderProcessType) object);
        {
            CharacterStringPropertyType lhsFees;
            lhsFees = this.getFees();
            CharacterStringPropertyType rhsFees;
            rhsFees = that.getFees();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fees", lhsFees), LocatorUtils.property(thatLocator, "fees", rhsFees), lhsFees, rhsFees)) {
                return false;
            }
        }
        {
            DateTimePropertyType lhsPlannedAvailableDateTime;
            lhsPlannedAvailableDateTime = this.getPlannedAvailableDateTime();
            DateTimePropertyType rhsPlannedAvailableDateTime;
            rhsPlannedAvailableDateTime = that.getPlannedAvailableDateTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "plannedAvailableDateTime", lhsPlannedAvailableDateTime), LocatorUtils.property(thatLocator, "plannedAvailableDateTime", rhsPlannedAvailableDateTime), lhsPlannedAvailableDateTime, rhsPlannedAvailableDateTime)) {
                return false;
            }
        }
        {
            CharacterStringPropertyType lhsOrderingInstructions;
            lhsOrderingInstructions = this.getOrderingInstructions();
            CharacterStringPropertyType rhsOrderingInstructions;
            rhsOrderingInstructions = that.getOrderingInstructions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orderingInstructions", lhsOrderingInstructions), LocatorUtils.property(thatLocator, "orderingInstructions", rhsOrderingInstructions), lhsOrderingInstructions, rhsOrderingInstructions)) {
                return false;
            }
        }
        {
            CharacterStringPropertyType lhsTurnaround;
            lhsTurnaround = this.getTurnaround();
            CharacterStringPropertyType rhsTurnaround;
            rhsTurnaround = that.getTurnaround();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "turnaround", lhsTurnaround), LocatorUtils.property(thatLocator, "turnaround", rhsTurnaround), lhsTurnaround, rhsTurnaround)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            CharacterStringPropertyType theFees;
            theFees = this.getFees();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fees", theFees), currentHashCode, theFees);
        }
        {
            DateTimePropertyType thePlannedAvailableDateTime;
            thePlannedAvailableDateTime = this.getPlannedAvailableDateTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "plannedAvailableDateTime", thePlannedAvailableDateTime), currentHashCode, thePlannedAvailableDateTime);
        }
        {
            CharacterStringPropertyType theOrderingInstructions;
            theOrderingInstructions = this.getOrderingInstructions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orderingInstructions", theOrderingInstructions), currentHashCode, theOrderingInstructions);
        }
        {
            CharacterStringPropertyType theTurnaround;
            theTurnaround = this.getTurnaround();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "turnaround", theTurnaround), currentHashCode, theTurnaround);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof MDStandardOrderProcessType) {
            final MDStandardOrderProcessType copy = ((MDStandardOrderProcessType) draftCopy);
            if (this.fees!= null) {
                CharacterStringPropertyType sourceFees;
                sourceFees = this.getFees();
                CharacterStringPropertyType copyFees = ((CharacterStringPropertyType) strategy.copy(LocatorUtils.property(locator, "fees", sourceFees), sourceFees));
                copy.setFees(copyFees);
            } else {
                copy.fees = null;
            }
            if (this.plannedAvailableDateTime!= null) {
                DateTimePropertyType sourcePlannedAvailableDateTime;
                sourcePlannedAvailableDateTime = this.getPlannedAvailableDateTime();
                DateTimePropertyType copyPlannedAvailableDateTime = ((DateTimePropertyType) strategy.copy(LocatorUtils.property(locator, "plannedAvailableDateTime", sourcePlannedAvailableDateTime), sourcePlannedAvailableDateTime));
                copy.setPlannedAvailableDateTime(copyPlannedAvailableDateTime);
            } else {
                copy.plannedAvailableDateTime = null;
            }
            if (this.orderingInstructions!= null) {
                CharacterStringPropertyType sourceOrderingInstructions;
                sourceOrderingInstructions = this.getOrderingInstructions();
                CharacterStringPropertyType copyOrderingInstructions = ((CharacterStringPropertyType) strategy.copy(LocatorUtils.property(locator, "orderingInstructions", sourceOrderingInstructions), sourceOrderingInstructions));
                copy.setOrderingInstructions(copyOrderingInstructions);
            } else {
                copy.orderingInstructions = null;
            }
            if (this.turnaround!= null) {
                CharacterStringPropertyType sourceTurnaround;
                sourceTurnaround = this.getTurnaround();
                CharacterStringPropertyType copyTurnaround = ((CharacterStringPropertyType) strategy.copy(LocatorUtils.property(locator, "turnaround", sourceTurnaround), sourceTurnaround));
                copy.setTurnaround(copyTurnaround);
            } else {
                copy.turnaround = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new MDStandardOrderProcessType();
    }

}
