//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.23 at 04:12:02 PM KST 
//


package org.isotc211._2005.gmd;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.isotc211._2005.gco.BooleanPropertyType;
import org.isotc211._2005.gco.CharacterStringPropertyType;
import org.isotc211._2005.gco.GenericNamePropertyType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Information identifing the feature catalogue
 * 
 * <p>Java class for MD_FeatureCatalogueDescription_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MD_FeatureCatalogueDescription_Type"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.isotc211.org/2005/gmd}AbstractMD_ContentInformation_Type"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="complianceCode" type="{http://www.isotc211.org/2005/gco}Boolean_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="language" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="includedWithDataset" type="{http://www.isotc211.org/2005/gco}Boolean_PropertyType"/&gt;
 *         &lt;element name="featureTypes" type="{http://www.isotc211.org/2005/gco}GenericName_PropertyType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="featureCatalogueCitation" type="{http://www.isotc211.org/2005/gmd}CI_Citation_PropertyType" maxOccurs="unbounded"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MD_FeatureCatalogueDescription_Type", propOrder = {
    "complianceCode",
    "language",
    "includedWithDataset",
    "featureTypes",
    "featureCatalogueCitation"
})
public class MDFeatureCatalogueDescriptionType
    extends AbstractMDContentInformationType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected BooleanPropertyType complianceCode;
    protected List<CharacterStringPropertyType> language;
    @XmlElement(required = true)
    protected BooleanPropertyType includedWithDataset;
    protected List<GenericNamePropertyType> featureTypes;
    @XmlElement(required = true)
    protected List<CICitationPropertyType> featureCatalogueCitation;

    /**
     * Gets the value of the complianceCode property.
     * 
     * @return
     *     possible object is
     *     {@link BooleanPropertyType }
     *     
     */
    public BooleanPropertyType getComplianceCode() {
        return complianceCode;
    }

    /**
     * Sets the value of the complianceCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link BooleanPropertyType }
     *     
     */
    public void setComplianceCode(BooleanPropertyType value) {
        this.complianceCode = value;
    }

    /**
     * Gets the value of the language property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the language property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLanguage().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CharacterStringPropertyType }
     * 
     * 
     */
    public List<CharacterStringPropertyType> getLanguage() {
        if (language == null) {
            language = new ArrayList<CharacterStringPropertyType>();
        }
        return this.language;
    }

    /**
     * Gets the value of the includedWithDataset property.
     * 
     * @return
     *     possible object is
     *     {@link BooleanPropertyType }
     *     
     */
    public BooleanPropertyType getIncludedWithDataset() {
        return includedWithDataset;
    }

    /**
     * Sets the value of the includedWithDataset property.
     * 
     * @param value
     *     allowed object is
     *     {@link BooleanPropertyType }
     *     
     */
    public void setIncludedWithDataset(BooleanPropertyType value) {
        this.includedWithDataset = value;
    }

    /**
     * Gets the value of the featureTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the featureTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFeatureTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GenericNamePropertyType }
     * 
     * 
     */
    public List<GenericNamePropertyType> getFeatureTypes() {
        if (featureTypes == null) {
            featureTypes = new ArrayList<GenericNamePropertyType>();
        }
        return this.featureTypes;
    }

    /**
     * Gets the value of the featureCatalogueCitation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the featureCatalogueCitation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFeatureCatalogueCitation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CICitationPropertyType }
     * 
     * 
     */
    public List<CICitationPropertyType> getFeatureCatalogueCitation() {
        if (featureCatalogueCitation == null) {
            featureCatalogueCitation = new ArrayList<CICitationPropertyType>();
        }
        return this.featureCatalogueCitation;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            BooleanPropertyType theComplianceCode;
            theComplianceCode = this.getComplianceCode();
            strategy.appendField(locator, this, "complianceCode", buffer, theComplianceCode);
        }
        {
            List<CharacterStringPropertyType> theLanguage;
            theLanguage = (((this.language!= null)&&(!this.language.isEmpty()))?this.getLanguage():null);
            strategy.appendField(locator, this, "language", buffer, theLanguage);
        }
        {
            BooleanPropertyType theIncludedWithDataset;
            theIncludedWithDataset = this.getIncludedWithDataset();
            strategy.appendField(locator, this, "includedWithDataset", buffer, theIncludedWithDataset);
        }
        {
            List<GenericNamePropertyType> theFeatureTypes;
            theFeatureTypes = (((this.featureTypes!= null)&&(!this.featureTypes.isEmpty()))?this.getFeatureTypes():null);
            strategy.appendField(locator, this, "featureTypes", buffer, theFeatureTypes);
        }
        {
            List<CICitationPropertyType> theFeatureCatalogueCitation;
            theFeatureCatalogueCitation = (((this.featureCatalogueCitation!= null)&&(!this.featureCatalogueCitation.isEmpty()))?this.getFeatureCatalogueCitation():null);
            strategy.appendField(locator, this, "featureCatalogueCitation", buffer, theFeatureCatalogueCitation);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MDFeatureCatalogueDescriptionType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final MDFeatureCatalogueDescriptionType that = ((MDFeatureCatalogueDescriptionType) object);
        {
            BooleanPropertyType lhsComplianceCode;
            lhsComplianceCode = this.getComplianceCode();
            BooleanPropertyType rhsComplianceCode;
            rhsComplianceCode = that.getComplianceCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceCode", lhsComplianceCode), LocatorUtils.property(thatLocator, "complianceCode", rhsComplianceCode), lhsComplianceCode, rhsComplianceCode)) {
                return false;
            }
        }
        {
            List<CharacterStringPropertyType> lhsLanguage;
            lhsLanguage = (((this.language!= null)&&(!this.language.isEmpty()))?this.getLanguage():null);
            List<CharacterStringPropertyType> rhsLanguage;
            rhsLanguage = (((that.language!= null)&&(!that.language.isEmpty()))?that.getLanguage():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage)) {
                return false;
            }
        }
        {
            BooleanPropertyType lhsIncludedWithDataset;
            lhsIncludedWithDataset = this.getIncludedWithDataset();
            BooleanPropertyType rhsIncludedWithDataset;
            rhsIncludedWithDataset = that.getIncludedWithDataset();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "includedWithDataset", lhsIncludedWithDataset), LocatorUtils.property(thatLocator, "includedWithDataset", rhsIncludedWithDataset), lhsIncludedWithDataset, rhsIncludedWithDataset)) {
                return false;
            }
        }
        {
            List<GenericNamePropertyType> lhsFeatureTypes;
            lhsFeatureTypes = (((this.featureTypes!= null)&&(!this.featureTypes.isEmpty()))?this.getFeatureTypes():null);
            List<GenericNamePropertyType> rhsFeatureTypes;
            rhsFeatureTypes = (((that.featureTypes!= null)&&(!that.featureTypes.isEmpty()))?that.getFeatureTypes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "featureTypes", lhsFeatureTypes), LocatorUtils.property(thatLocator, "featureTypes", rhsFeatureTypes), lhsFeatureTypes, rhsFeatureTypes)) {
                return false;
            }
        }
        {
            List<CICitationPropertyType> lhsFeatureCatalogueCitation;
            lhsFeatureCatalogueCitation = (((this.featureCatalogueCitation!= null)&&(!this.featureCatalogueCitation.isEmpty()))?this.getFeatureCatalogueCitation():null);
            List<CICitationPropertyType> rhsFeatureCatalogueCitation;
            rhsFeatureCatalogueCitation = (((that.featureCatalogueCitation!= null)&&(!that.featureCatalogueCitation.isEmpty()))?that.getFeatureCatalogueCitation():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "featureCatalogueCitation", lhsFeatureCatalogueCitation), LocatorUtils.property(thatLocator, "featureCatalogueCitation", rhsFeatureCatalogueCitation), lhsFeatureCatalogueCitation, rhsFeatureCatalogueCitation)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            BooleanPropertyType theComplianceCode;
            theComplianceCode = this.getComplianceCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceCode", theComplianceCode), currentHashCode, theComplianceCode);
        }
        {
            List<CharacterStringPropertyType> theLanguage;
            theLanguage = (((this.language!= null)&&(!this.language.isEmpty()))?this.getLanguage():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "language", theLanguage), currentHashCode, theLanguage);
        }
        {
            BooleanPropertyType theIncludedWithDataset;
            theIncludedWithDataset = this.getIncludedWithDataset();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "includedWithDataset", theIncludedWithDataset), currentHashCode, theIncludedWithDataset);
        }
        {
            List<GenericNamePropertyType> theFeatureTypes;
            theFeatureTypes = (((this.featureTypes!= null)&&(!this.featureTypes.isEmpty()))?this.getFeatureTypes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "featureTypes", theFeatureTypes), currentHashCode, theFeatureTypes);
        }
        {
            List<CICitationPropertyType> theFeatureCatalogueCitation;
            theFeatureCatalogueCitation = (((this.featureCatalogueCitation!= null)&&(!this.featureCatalogueCitation.isEmpty()))?this.getFeatureCatalogueCitation():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "featureCatalogueCitation", theFeatureCatalogueCitation), currentHashCode, theFeatureCatalogueCitation);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof MDFeatureCatalogueDescriptionType) {
            final MDFeatureCatalogueDescriptionType copy = ((MDFeatureCatalogueDescriptionType) draftCopy);
            if (this.complianceCode!= null) {
                BooleanPropertyType sourceComplianceCode;
                sourceComplianceCode = this.getComplianceCode();
                BooleanPropertyType copyComplianceCode = ((BooleanPropertyType) strategy.copy(LocatorUtils.property(locator, "complianceCode", sourceComplianceCode), sourceComplianceCode));
                copy.setComplianceCode(copyComplianceCode);
            } else {
                copy.complianceCode = null;
            }
            if ((this.language!= null)&&(!this.language.isEmpty())) {
                List<CharacterStringPropertyType> sourceLanguage;
                sourceLanguage = (((this.language!= null)&&(!this.language.isEmpty()))?this.getLanguage():null);
                @SuppressWarnings("unchecked")
                List<CharacterStringPropertyType> copyLanguage = ((List<CharacterStringPropertyType> ) strategy.copy(LocatorUtils.property(locator, "language", sourceLanguage), sourceLanguage));
                copy.language = null;
                if (copyLanguage!= null) {
                    List<CharacterStringPropertyType> uniqueLanguagel = copy.getLanguage();
                    uniqueLanguagel.addAll(copyLanguage);
                }
            } else {
                copy.language = null;
            }
            if (this.includedWithDataset!= null) {
                BooleanPropertyType sourceIncludedWithDataset;
                sourceIncludedWithDataset = this.getIncludedWithDataset();
                BooleanPropertyType copyIncludedWithDataset = ((BooleanPropertyType) strategy.copy(LocatorUtils.property(locator, "includedWithDataset", sourceIncludedWithDataset), sourceIncludedWithDataset));
                copy.setIncludedWithDataset(copyIncludedWithDataset);
            } else {
                copy.includedWithDataset = null;
            }
            if ((this.featureTypes!= null)&&(!this.featureTypes.isEmpty())) {
                List<GenericNamePropertyType> sourceFeatureTypes;
                sourceFeatureTypes = (((this.featureTypes!= null)&&(!this.featureTypes.isEmpty()))?this.getFeatureTypes():null);
                @SuppressWarnings("unchecked")
                List<GenericNamePropertyType> copyFeatureTypes = ((List<GenericNamePropertyType> ) strategy.copy(LocatorUtils.property(locator, "featureTypes", sourceFeatureTypes), sourceFeatureTypes));
                copy.featureTypes = null;
                if (copyFeatureTypes!= null) {
                    List<GenericNamePropertyType> uniqueFeatureTypesl = copy.getFeatureTypes();
                    uniqueFeatureTypesl.addAll(copyFeatureTypes);
                }
            } else {
                copy.featureTypes = null;
            }
            if ((this.featureCatalogueCitation!= null)&&(!this.featureCatalogueCitation.isEmpty())) {
                List<CICitationPropertyType> sourceFeatureCatalogueCitation;
                sourceFeatureCatalogueCitation = (((this.featureCatalogueCitation!= null)&&(!this.featureCatalogueCitation.isEmpty()))?this.getFeatureCatalogueCitation():null);
                @SuppressWarnings("unchecked")
                List<CICitationPropertyType> copyFeatureCatalogueCitation = ((List<CICitationPropertyType> ) strategy.copy(LocatorUtils.property(locator, "featureCatalogueCitation", sourceFeatureCatalogueCitation), sourceFeatureCatalogueCitation));
                copy.featureCatalogueCitation = null;
                if (copyFeatureCatalogueCitation!= null) {
                    List<CICitationPropertyType> uniqueFeatureCatalogueCitationl = copy.getFeatureCatalogueCitation();
                    uniqueFeatureCatalogueCitationl.addAll(copyFeatureCatalogueCitation);
                }
            } else {
                copy.featureCatalogueCitation = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new MDFeatureCatalogueDescriptionType();
    }

}
