//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.23 at 04:12:02 PM KST 
//


package org.isotc211._2005.gmd;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.isotc211._2005.gco.AbstractObjectType;
import org.isotc211._2005.gco.CharacterStringPropertyType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Information required enabling contact with the  responsible person and/or organisation
 * 
 * <p>Java class for CI_Contact_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CI_Contact_Type"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.isotc211.org/2005/gco}AbstractObject_Type"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="phone" type="{http://www.isotc211.org/2005/gmd}CI_Telephone_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="address" type="{http://www.isotc211.org/2005/gmd}CI_Address_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="onlineResource" type="{http://www.isotc211.org/2005/gmd}CI_OnlineResource_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="hoursOfService" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" minOccurs="0"/&gt;
 *         &lt;element name="contactInstructions" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CI_Contact_Type", propOrder = {
    "phone",
    "address",
    "onlineResource",
    "hoursOfService",
    "contactInstructions"
})
public class CIContactType
    extends AbstractObjectType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected CITelephonePropertyType phone;
    protected CIAddressPropertyType address;
    protected CIOnlineResourcePropertyType onlineResource;
    protected CharacterStringPropertyType hoursOfService;
    protected CharacterStringPropertyType contactInstructions;

    /**
     * Gets the value of the phone property.
     * 
     * @return
     *     possible object is
     *     {@link CITelephonePropertyType }
     *     
     */
    public CITelephonePropertyType getPhone() {
        return phone;
    }

    /**
     * Sets the value of the phone property.
     * 
     * @param value
     *     allowed object is
     *     {@link CITelephonePropertyType }
     *     
     */
    public void setPhone(CITelephonePropertyType value) {
        this.phone = value;
    }

    /**
     * Gets the value of the address property.
     * 
     * @return
     *     possible object is
     *     {@link CIAddressPropertyType }
     *     
     */
    public CIAddressPropertyType getAddress() {
        return address;
    }

    /**
     * Sets the value of the address property.
     * 
     * @param value
     *     allowed object is
     *     {@link CIAddressPropertyType }
     *     
     */
    public void setAddress(CIAddressPropertyType value) {
        this.address = value;
    }

    /**
     * Gets the value of the onlineResource property.
     * 
     * @return
     *     possible object is
     *     {@link CIOnlineResourcePropertyType }
     *     
     */
    public CIOnlineResourcePropertyType getOnlineResource() {
        return onlineResource;
    }

    /**
     * Sets the value of the onlineResource property.
     * 
     * @param value
     *     allowed object is
     *     {@link CIOnlineResourcePropertyType }
     *     
     */
    public void setOnlineResource(CIOnlineResourcePropertyType value) {
        this.onlineResource = value;
    }

    /**
     * Gets the value of the hoursOfService property.
     * 
     * @return
     *     possible object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public CharacterStringPropertyType getHoursOfService() {
        return hoursOfService;
    }

    /**
     * Sets the value of the hoursOfService property.
     * 
     * @param value
     *     allowed object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public void setHoursOfService(CharacterStringPropertyType value) {
        this.hoursOfService = value;
    }

    /**
     * Gets the value of the contactInstructions property.
     * 
     * @return
     *     possible object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public CharacterStringPropertyType getContactInstructions() {
        return contactInstructions;
    }

    /**
     * Sets the value of the contactInstructions property.
     * 
     * @param value
     *     allowed object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public void setContactInstructions(CharacterStringPropertyType value) {
        this.contactInstructions = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            CITelephonePropertyType thePhone;
            thePhone = this.getPhone();
            strategy.appendField(locator, this, "phone", buffer, thePhone);
        }
        {
            CIAddressPropertyType theAddress;
            theAddress = this.getAddress();
            strategy.appendField(locator, this, "address", buffer, theAddress);
        }
        {
            CIOnlineResourcePropertyType theOnlineResource;
            theOnlineResource = this.getOnlineResource();
            strategy.appendField(locator, this, "onlineResource", buffer, theOnlineResource);
        }
        {
            CharacterStringPropertyType theHoursOfService;
            theHoursOfService = this.getHoursOfService();
            strategy.appendField(locator, this, "hoursOfService", buffer, theHoursOfService);
        }
        {
            CharacterStringPropertyType theContactInstructions;
            theContactInstructions = this.getContactInstructions();
            strategy.appendField(locator, this, "contactInstructions", buffer, theContactInstructions);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CIContactType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CIContactType that = ((CIContactType) object);
        {
            CITelephonePropertyType lhsPhone;
            lhsPhone = this.getPhone();
            CITelephonePropertyType rhsPhone;
            rhsPhone = that.getPhone();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phone", lhsPhone), LocatorUtils.property(thatLocator, "phone", rhsPhone), lhsPhone, rhsPhone)) {
                return false;
            }
        }
        {
            CIAddressPropertyType lhsAddress;
            lhsAddress = this.getAddress();
            CIAddressPropertyType rhsAddress;
            rhsAddress = that.getAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
                return false;
            }
        }
        {
            CIOnlineResourcePropertyType lhsOnlineResource;
            lhsOnlineResource = this.getOnlineResource();
            CIOnlineResourcePropertyType rhsOnlineResource;
            rhsOnlineResource = that.getOnlineResource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "onlineResource", lhsOnlineResource), LocatorUtils.property(thatLocator, "onlineResource", rhsOnlineResource), lhsOnlineResource, rhsOnlineResource)) {
                return false;
            }
        }
        {
            CharacterStringPropertyType lhsHoursOfService;
            lhsHoursOfService = this.getHoursOfService();
            CharacterStringPropertyType rhsHoursOfService;
            rhsHoursOfService = that.getHoursOfService();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hoursOfService", lhsHoursOfService), LocatorUtils.property(thatLocator, "hoursOfService", rhsHoursOfService), lhsHoursOfService, rhsHoursOfService)) {
                return false;
            }
        }
        {
            CharacterStringPropertyType lhsContactInstructions;
            lhsContactInstructions = this.getContactInstructions();
            CharacterStringPropertyType rhsContactInstructions;
            rhsContactInstructions = that.getContactInstructions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactInstructions", lhsContactInstructions), LocatorUtils.property(thatLocator, "contactInstructions", rhsContactInstructions), lhsContactInstructions, rhsContactInstructions)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            CITelephonePropertyType thePhone;
            thePhone = this.getPhone();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phone", thePhone), currentHashCode, thePhone);
        }
        {
            CIAddressPropertyType theAddress;
            theAddress = this.getAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
        }
        {
            CIOnlineResourcePropertyType theOnlineResource;
            theOnlineResource = this.getOnlineResource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "onlineResource", theOnlineResource), currentHashCode, theOnlineResource);
        }
        {
            CharacterStringPropertyType theHoursOfService;
            theHoursOfService = this.getHoursOfService();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hoursOfService", theHoursOfService), currentHashCode, theHoursOfService);
        }
        {
            CharacterStringPropertyType theContactInstructions;
            theContactInstructions = this.getContactInstructions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactInstructions", theContactInstructions), currentHashCode, theContactInstructions);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof CIContactType) {
            final CIContactType copy = ((CIContactType) draftCopy);
            if (this.phone!= null) {
                CITelephonePropertyType sourcePhone;
                sourcePhone = this.getPhone();
                CITelephonePropertyType copyPhone = ((CITelephonePropertyType) strategy.copy(LocatorUtils.property(locator, "phone", sourcePhone), sourcePhone));
                copy.setPhone(copyPhone);
            } else {
                copy.phone = null;
            }
            if (this.address!= null) {
                CIAddressPropertyType sourceAddress;
                sourceAddress = this.getAddress();
                CIAddressPropertyType copyAddress = ((CIAddressPropertyType) strategy.copy(LocatorUtils.property(locator, "address", sourceAddress), sourceAddress));
                copy.setAddress(copyAddress);
            } else {
                copy.address = null;
            }
            if (this.onlineResource!= null) {
                CIOnlineResourcePropertyType sourceOnlineResource;
                sourceOnlineResource = this.getOnlineResource();
                CIOnlineResourcePropertyType copyOnlineResource = ((CIOnlineResourcePropertyType) strategy.copy(LocatorUtils.property(locator, "onlineResource", sourceOnlineResource), sourceOnlineResource));
                copy.setOnlineResource(copyOnlineResource);
            } else {
                copy.onlineResource = null;
            }
            if (this.hoursOfService!= null) {
                CharacterStringPropertyType sourceHoursOfService;
                sourceHoursOfService = this.getHoursOfService();
                CharacterStringPropertyType copyHoursOfService = ((CharacterStringPropertyType) strategy.copy(LocatorUtils.property(locator, "hoursOfService", sourceHoursOfService), sourceHoursOfService));
                copy.setHoursOfService(copyHoursOfService);
            } else {
                copy.hoursOfService = null;
            }
            if (this.contactInstructions!= null) {
                CharacterStringPropertyType sourceContactInstructions;
                sourceContactInstructions = this.getContactInstructions();
                CharacterStringPropertyType copyContactInstructions = ((CharacterStringPropertyType) strategy.copy(LocatorUtils.property(locator, "contactInstructions", sourceContactInstructions), sourceContactInstructions));
                copy.setContactInstructions(copyContactInstructions);
            } else {
                copy.contactInstructions = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CIContactType();
    }

}
